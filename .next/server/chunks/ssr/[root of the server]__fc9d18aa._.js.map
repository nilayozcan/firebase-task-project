{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nilay/OneDrive/Masa%C3%BCst%C3%BC/firebase-project/src/lib/initialData.ts"],"sourcesContent":["import type { Task, UserProfile, TaskList, Comment, Notification } from '@/lib/types';\r\n\r\nconst today = new Date();\r\nconst getFutureDate = (days: number) => {\r\n  const date = new Date();\r\n  date.setDate(today.getDate() + days);\r\n  return date;\r\n};\r\nconst getPastDate = (days: number) => {\r\n  const date = new Date();\r\n  date.setDate(today.getDate() - days);\r\n  return date;\r\n}\r\n\r\nexport const initialUserProfilesData: UserProfile[] = [];\r\n\r\nexport const initialTaskListsData: TaskList[] = [];\r\n\r\nexport const initialTasksData: Task[] = [];\r\n\r\nexport const initialNotificationsData: Notification[] = [];"],"names":[],"mappings":";;;;;;AAEA,MAAM,QAAQ,IAAI;AAClB,MAAM,gBAAgB,CAAC;IACrB,MAAM,OAAO,IAAI;IACjB,KAAK,OAAO,CAAC,MAAM,OAAO,KAAK;IAC/B,OAAO;AACT;AACA,MAAM,cAAc,CAAC;IACnB,MAAM,OAAO,IAAI;IACjB,KAAK,OAAO,CAAC,MAAM,OAAO,KAAK;IAC/B,OAAO;AACT;AAEO,MAAM,0BAAyC,EAAE;AAEjD,MAAM,uBAAmC,EAAE;AAE3C,MAAM,mBAA2B,EAAE;AAEnC,MAAM,2BAA2C,EAAE","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nilay/OneDrive/Masa%C3%BCst%C3%BC/firebase-project/src/contexts/AppContext.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport type { ReactNode } from 'react';\r\nimport { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport type { Task, UserProfile, TaskList, Comment, Notification, NotificationType, NotificationStatus } from '@/lib/types';\r\nimport { initialTasksData, initialUserProfilesData, initialTaskListsData } from '@/lib/initialData';\r\nimport type { TaskFormValues } from '@/components/tasks/TaskForm'; \r\nimport type { ProfileFormValues as UserProfileFormValues } from '@/components/settings/ProfileForm';\r\nimport type { SignupFormValues } from '@/components/auth/SignupForm';\r\nimport type { LoginFormValues } from '@/components/auth/LoginForm';\r\nimport { sendVerificationEmail } from '@/actions/emailActions';\r\nimport { format, isToday, isWithinInterval, addDays, startOfDay, endOfDay } from 'date-fns';\r\nimport { tr } from 'date-fns/locale';\r\n\r\ninterface AppContextType {\r\n  tasks: Task[];\r\n  addTask: (taskDetails: TaskFormValues, listId: string) => void;\r\n  updateTask: (updatedTask: Task) => void;\r\n  deleteTask: (taskId: string) => void;\r\n  toggleTaskCompletion: (taskId: string) => void;\r\n  \r\n  currentUser: UserProfile | null;\r\n  setCurrentUser: (user: UserProfile | null) => void; \r\n  allUsers: UserProfile[];\r\n  registerUser: (values: SignupFormValues) => Promise<{ success: boolean; message: string; userId?: string }>;\r\n  loginUser: (values: LoginFormValues) => Promise<{ success: boolean; message: string }>;\r\n  logoutUser: () => void;\r\n  verifyUser: (userId: string) => void;\r\n  updateUserProfile: (profile: UserProfileFormValues) => void;\r\n  followUser: (targetUserId: string) => void;\r\n  unfollowUser: (targetUserId: string) => void;\r\n\r\n  taskLists: TaskList[];\r\n  addTaskList: (listData: { name: string; visibility: 'public' | 'private'; color: string; usersToInvite?: string[] }) => string;\r\n  updateTaskList: (listId: string, updates: Partial<Omit<TaskList, 'id' | 'ownerId' | 'createdAt'>>, usersToInvite?: string[]) => void;\r\n  inviteUserToTaskList: (listId: string, inviteeUserId: string) => void; \r\n  deleteTaskList: (listId: string) => void;\r\n  updateTaskListVisibility: (listId: string, visibility: 'public' | 'private') => void;\r\n  acceptTaskListInvitation: (notificationId: string) => void;\r\n  declineTaskListInvitation: (notificationId: string) => void;\r\n\r\n  addComment: (taskId: string, text: string) => void;\r\n\r\n  notifications: Notification[];\r\n  addNotification: (notificationPayload: Omit<Notification, 'id' | 'createdAt' | 'isRead'>) => void;\r\n  markNotificationAsRead: (notificationId: string) => void;\r\n  markAllNotificationsAsRead: (recipientId: string) => void;\r\n  deleteNotification: (notificationId: string) => void;\r\n  \r\n  theme: 'light' | 'dark';\r\n  toggleTheme: () => void;\r\n  isLoading: boolean; \r\n}\r\n\r\nconst AppContext = createContext<AppContextType | undefined>(undefined);\r\n\r\nexport function AppProvider({ children }: { children: ReactNode }) {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [allUsers, setAllUsers] = useState<UserProfile[]>(initialUserProfilesData);\r\n  const [currentUser, setCurrentUserInternal] = useState<UserProfile | null>(null); \r\n  const [taskLists, setTaskLists] = useState<TaskList[]>([]);\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  \r\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const setCurrentUser = useCallback((user: UserProfile | null) => {\r\n    setCurrentUserInternal(user);\r\n    if (user) {\r\n      localStorage.setItem('currentUserId', user.id);\r\n    } else {\r\n      localStorage.removeItem('currentUserId');\r\n    }\r\n  }, []);\r\n\r\n  // Load data from localStorage on mount\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    try {\r\n      const storedTasks = localStorage.getItem('tasks');\r\n      if (storedTasks) {\r\n        setTasks(JSON.parse(storedTasks).map((task: Task) => ({ ...task, dueDate: new Date(task.dueDate), createdAt: new Date(task.createdAt), comments: (task.comments || []).map(c => ({...c, createdAt: new Date(c.createdAt)}))})) );\r\n      } else {\r\n        setTasks(initialTasksData);\r\n      }\r\n\r\n      const storedUsers = localStorage.getItem('allUsers');\r\n      let usersToLoad: UserProfile[];\r\n      if (storedUsers) {\r\n        usersToLoad = JSON.parse(storedUsers);\r\n      } else {\r\n        usersToLoad = initialUserProfilesData;\r\n      }\r\n      usersToLoad = usersToLoad.filter(user => user.username && user.username.trim() !== '');\r\n      setAllUsers(usersToLoad.map((user: UserProfile) => ({ ...user, dateOfBirth: user.dateOfBirth ? new Date(user.dateOfBirth) : undefined })));\r\n      \r\n      const currentUserId = localStorage.getItem('currentUserId');\r\n      if (currentUserId) {\r\n        const foundUser = usersToLoad.find((u: UserProfile) => u.id === currentUserId);\r\n        if (foundUser) setCurrentUserInternal({ ...foundUser, dateOfBirth: foundUser.dateOfBirth ? new Date(foundUser.dateOfBirth) : undefined });\r\n      }\r\n      \r\n      const storedTaskLists = localStorage.getItem('taskLists');\r\n      if (storedTaskLists) {\r\n        setTaskLists(JSON.parse(storedTaskLists).map((list: TaskList) => ({ ...list, createdAt: new Date(list.createdAt), color: list.color || 'hsl(207, 70%, 53%)' })));\r\n      } else {\r\n        setTaskLists(initialTaskListsData);\r\n      }\r\n\r\n      const storedNotifications = localStorage.getItem('notifications');\r\n      if (storedNotifications) {\r\n        setNotifications(JSON.parse(storedNotifications).map((n: Notification) => ({ ...n, createdAt: new Date(n.createdAt) })));\r\n      } else {\r\n        setNotifications([]);\r\n      }\r\n\r\n      const storedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;\r\n      if (storedTheme) {\r\n        setTheme(storedTheme);\r\n        document.documentElement.classList.toggle('dark', storedTheme === 'dark');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading data from localStorage:\", error);\r\n      // Fallback to initial data if localStorage parsing fails\r\n      setTasks(initialTasksData);\r\n      setAllUsers(initialUserProfilesData.filter(user => user.username && user.username.trim() !== ''));\r\n      setTaskLists(initialTaskListsData);\r\n      setNotifications([]);\r\n    } finally {\r\n      setIsMounted(true);\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Persist data to localStorage when it changes\r\n  useEffect(() => { if (isMounted) localStorage.setItem('tasks', JSON.stringify(tasks)); }, [tasks, isMounted]);\r\n  useEffect(() => { if (isMounted) localStorage.setItem('allUsers', JSON.stringify(allUsers)); }, [allUsers, isMounted]);\r\n  useEffect(() => { if (isMounted) localStorage.setItem('taskLists', JSON.stringify(taskLists)); }, [taskLists, isMounted]);\r\n  useEffect(() => { if (isMounted) localStorage.setItem('notifications', JSON.stringify(notifications)); }, [notifications, isMounted]);\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      localStorage.setItem('theme', theme);\r\n      document.documentElement.classList.toggle('dark', theme === 'dark');\r\n    }\r\n  }, [theme, isMounted]);\r\n\r\n  // Update currentUser state if allUsers changes\r\n   useEffect(() => {\r\n    if (isMounted && currentUser) {\r\n        const updatedCurrentUser = allUsers.find(u => u.id === currentUser.id);\r\n        if (updatedCurrentUser && JSON.stringify(updatedCurrentUser) !== JSON.stringify(currentUser)) {\r\n             setCurrentUserInternal({ ...updatedCurrentUser, dateOfBirth: updatedCurrentUser.dateOfBirth ? new Date(updatedCurrentUser.dateOfBirth) : undefined });\r\n        } else if (!updatedCurrentUser) { // Current user might have been filtered out\r\n            setCurrentUserInternal(null);\r\n        }\r\n    }\r\n  }, [allUsers, currentUser, isMounted]);\r\n\r\n\r\n  // Notification Management\r\n  const deleteNotification = useCallback((notificationId: string) => {\r\n    setNotifications(prev => prev.filter(n => n.id !== notificationId));\r\n  }, []);\r\n  \r\n  const addNotification = useCallback((notificationPayload: Omit<Notification, 'id' | 'createdAt' | 'isRead'>) => {\r\n    const now = new Date();\r\n    if (notificationPayload.type === 'birthday_reminder' || notificationPayload.type === 'upcoming_task') {\r\n      const existingNotification = notifications.find(n => \r\n        n.recipientId === notificationPayload.recipientId &&\r\n        n.type === notificationPayload.type &&\r\n        n.relatedItemId === notificationPayload.relatedItemId && \r\n        isToday(new Date(n.createdAt)) \r\n      );\r\n      if (existingNotification) {\r\n        return;\r\n      }\r\n    } else if (notificationPayload.type === 'task_list_invitation' && notificationPayload.status === 'pending') {\r\n        const existingInvitation = notifications.find(n =>\r\n            n.type === 'task_list_invitation' &&\r\n            n.recipientId === notificationPayload.recipientId &&\r\n            n.relatedItemId === notificationPayload.relatedItemId &&\r\n            n.status === 'pending'\r\n        );\r\n        if (existingInvitation) {\r\n            return;\r\n        }\r\n    }\r\n    \r\n    const newNotification: Notification = {\r\n      id: crypto.randomUUID(),\r\n      ...notificationPayload,\r\n      createdAt: now,\r\n      isRead: false, \r\n    };\r\n    setNotifications(prev => [newNotification, ...prev].sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()));\r\n  }, [notifications]);\r\n\r\n  const markNotificationAsRead = useCallback((notificationId: string) => {\r\n    deleteNotification(notificationId);\r\n  }, [deleteNotification]);\r\n\r\n  const markAllNotificationsAsRead = useCallback((recipientId: string) => {\r\n    setNotifications(prev => prev.filter(n => n.recipientId !== recipientId));\r\n  }, []);\r\n\r\n\r\n  // Auth Functions\r\n  const registerUser = useCallback(async (values: SignupFormValues): Promise<{ success: boolean; message: string; userId?: string}> => {\r\n    return new Promise(async resolve => {\r\n        if (allUsers.some(user => user.email === values.email)) {\r\n            resolve({ success: false, message: \"Bu e-posta adresi zaten kullanılıyor.\" }); return;\r\n        }\r\n        if (allUsers.some(user => user.username === values.username)) {\r\n            resolve({ success: false, message: \"Bu kullanıcı adı zaten kullanılıyor.\" }); return;\r\n        }\r\n        const newUserId = crypto.randomUUID();\r\n        const newUser: UserProfile = {\r\n            id: newUserId, name: values.name, email: values.email, username: values.username,\r\n            password: values.password, dateOfBirth: values.dateOfBirth,\r\n            avatarUrl: `https://picsum.photos/seed/${values.email}/128/128`,\r\n            following: [], followers: [], \r\n            isVerified: true, \r\n        };\r\n        setAllUsers(prev => [...prev, newUser]);\r\n        \r\n        resolve({ success: true, message: \"Kayıt başarılı! Hesabınız oluşturuldu.\", userId: newUser.id });\r\n    });\r\n  }, [allUsers]);\r\n\r\n  const loginUser = useCallback(async (values: LoginFormValues): Promise<{ success: boolean; message: string }> => {\r\n    return new Promise(resolve => {\r\n        const user = allUsers.find(u => (u.username === values.identifier || u.email === values.identifier));\r\n        if (!user) { resolve({ success: false, message: \"Kullanıcı bulunamadı.\" }); return; }\r\n        if (user.password !== values.password) { resolve({ success: false, message: \"Yanlış şifre.\" }); return; }\r\n        setCurrentUser(user);\r\n        resolve({ success: true, message: \"Giriş başarılı!\" });\r\n    });\r\n  }, [allUsers, setCurrentUser]);\r\n\r\n  const logoutUser = useCallback(() => { setCurrentUser(null); }, [setCurrentUser]);\r\n  \r\n  const verifyUser = useCallback((userId: string) => {\r\n    setAllUsers(prev => prev.map(user => user.id === userId ? { ...user, isVerified: true } : user));\r\n    if (currentUser && currentUser.id === userId && !currentUser.isVerified) {\r\n        setCurrentUser({ ...currentUser, isVerified: true });\r\n    }\r\n  }, [currentUser, setCurrentUser]);\r\n\r\n  // Task Management\r\n  const addTask = useCallback((taskDetails: TaskFormValues, listId: string) => {\r\n    if (!currentUser) return;\r\n    const newTask: Task = { \r\n      id: crypto.randomUUID(), title: taskDetails.title, dueDate: taskDetails.dueDate,\r\n      time: taskDetails.time, notes: taskDetails.notes, \r\n      isCompleted: taskDetails.isCompleted || false, createdAt: new Date(), listId, comments: [],\r\n    };\r\n    setTasks(prevTasks => [...prevTasks, newTask]);\r\n  }, [currentUser]);\r\n  const updateTask = useCallback((updatedTask: Task) => { if (!currentUser) return; setTasks(prevTasks => prevTasks.map(task => task.id === updatedTask.id ? { ...task, ...updatedTask } : task)); }, [currentUser]);\r\n  const deleteTask = useCallback((taskId: string) => { if (!currentUser) return; setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId)); }, [currentUser]);\r\n  const toggleTaskCompletion = useCallback((taskId: string) => { if (!currentUser) return; setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? { ...task, isCompleted: !task.isCompleted } : task)); }, [currentUser]);\r\n\r\n  // User Profile & Social\r\n  const updateUserProfile = useCallback((profileUpdate: UserProfileFormValues) => {\r\n    if (!currentUser) return;\r\n    setAllUsers(prevAllUsers => prevAllUsers.map(user => \r\n      user.id === currentUser.id ? { ...user, ...profileUpdate, dateOfBirth: user.dateOfBirth } : user \r\n    ));\r\n  }, [currentUser]);\r\n\r\n  const followUser = useCallback((targetUserId: string) => {\r\n    if (!currentUser) return;\r\n    const targetUser = allUsers.find(u => u.id === targetUserId);\r\n    if (!targetUser) return;\r\n\r\n    setAllUsers(prevAllUsers => prevAllUsers.map(user => {\r\n        if (user.id === currentUser.id) return { ...user, following: [...new Set([...user.following, targetUserId])] };\r\n        if (user.id === targetUserId) return { ...user, followers: [...new Set([...user.followers, currentUser.id])] };\r\n        return user;\r\n      }));\r\n    addNotification({\r\n      recipientId: targetUserId,\r\n      triggerUserId: currentUser.id,\r\n      type: 'new_follower',\r\n      message: `${currentUser.name} sizi takip etmeye başladı.`,\r\n      linkTo: `/profile/${currentUser.id}`\r\n    });\r\n  }, [currentUser, allUsers, addNotification]);\r\n\r\n  const unfollowUser = useCallback((targetUserId: string) => {\r\n    if (!currentUser) return;\r\n    setAllUsers(prevAllUsers => prevAllUsers.map(user => {\r\n        if (user.id === currentUser.id) return { ...user, following: user.following.filter(id => id !== targetUserId) };\r\n        if (user.id === targetUserId) return { ...user, followers: user.followers.filter(id => id !== currentUser.id) };\r\n        return user;\r\n      }));\r\n  }, [currentUser]);\r\n\r\n  // Task List Management\r\n  const inviteUserToTaskList = useCallback((listId: string, inviteeUserId: string) => {\r\n    if (!currentUser) return;\r\n    const list = taskLists.find(l => l.id === listId);\r\n    const invitee = allUsers.find(u => u.id === inviteeUserId);\r\n    if (!list || !invitee) return;\r\n\r\n    const existingInvitation = notifications.find(n => \r\n        n.type === 'task_list_invitation' && \r\n        n.recipientId === inviteeUserId && \r\n        n.relatedItemId === listId &&\r\n        n.status === 'pending'\r\n    );\r\n    if (list.sharedWith.includes(inviteeUserId) || existingInvitation) {\r\n        return;\r\n    }\r\n\r\n    addNotification({\r\n      recipientId: inviteeUserId,\r\n      triggerUserId: currentUser.id,\r\n      type: 'task_list_invitation',\r\n      message: `${currentUser.name}, sizi \"${list.name}\" adlı listeye davet etti.`,\r\n      relatedItemId: listId,\r\n      status: 'pending',\r\n      linkTo: `/tasks?list=${listId}` \r\n    });\r\n  }, [currentUser, taskLists, allUsers, addNotification, notifications]);\r\n\r\n  const addTaskList = useCallback((listData: { name: string; visibility: 'public' | 'private'; color: string; usersToInvite?: string[] }): string => {\r\n    if (!currentUser) return \"\";\r\n    const newListId = crypto.randomUUID();\r\n    const newList: TaskList = {\r\n      id: newListId, name: listData.name, ownerId: currentUser.id, sharedWith: [], \r\n      createdAt: new Date(), visibility: listData.visibility, color: listData.color,\r\n    };\r\n    setTaskLists(prev => [...prev, newList]);\r\n    if (listData.usersToInvite) {\r\n      listData.usersToInvite.forEach(userId => inviteUserToTaskList(newListId, userId));\r\n    }\r\n    return newListId;\r\n  }, [currentUser, inviteUserToTaskList]);\r\n\r\n  const updateTaskList = useCallback((listId: string, updates: Partial<Omit<TaskList, 'id' | 'ownerId' | 'createdAt'>>, usersToInvite?: string[]) => {\r\n    if (!currentUser) return;\r\n    setTaskLists(prev => prev.map(list =>\r\n      list.id === listId && list.ownerId === currentUser.id ? { ...list, ...updates } : list\r\n    ));\r\n    if (usersToInvite) {\r\n        usersToInvite.forEach(userId => inviteUserToTaskList(listId, userId));\r\n    }\r\n  }, [currentUser, inviteUserToTaskList]);\r\n  \r\n  const deleteTaskList = useCallback((listId: string) => {\r\n    if (!currentUser) return;\r\n    setTaskLists(prev => prev.filter(list => list.id !== listId || list.ownerId !== currentUser.id));\r\n    setTasks(prevTasks => prevTasks.filter(task => task.listId !== listId));\r\n  }, [currentUser]);\r\n\r\n  const updateTaskListVisibility = useCallback((listId: string, visibility: 'public' | 'private') => {\r\n    if (!currentUser) return;\r\n    setTaskLists(prev => prev.map(list =>\r\n      list.id === listId && list.ownerId === currentUser.id ? { ...list, visibility } : list\r\n    ));\r\n  }, [currentUser]);\r\n\r\n  const acceptTaskListInvitation = useCallback((notificationId: string) => {\r\n    if (!currentUser) return;\r\n    const notification = notifications.find(n => n.id === notificationId);\r\n    if (!notification || notification.type !== 'task_list_invitation' || !notification.relatedItemId || !notification.triggerUserId) {\r\n        deleteNotification(notificationId); \r\n        return;\r\n    }\r\n\r\n    setTaskLists(prev => prev.map(list => \r\n      list.id === notification.relatedItemId \r\n        ? { ...list, sharedWith: [...new Set([...list.sharedWith, currentUser.id])] } \r\n        : list\r\n    ));\r\n    \r\n    const list = taskLists.find(l => l.id === notification.relatedItemId); \r\n    const inviter = allUsers.find(u => u.id === notification.triggerUserId);\r\n\r\n    if (list && inviter) {\r\n        addNotification({\r\n            recipientId: inviter.id,\r\n            triggerUserId: currentUser.id,\r\n            type: 'invitation_response',\r\n            message: `${currentUser.name}, \"${list.name}\" listesine katılma davetinizi kabul etti.`,\r\n            relatedItemId: list.id,\r\n            linkTo: `/tasks?list=${list.id}` \r\n        });\r\n    }\r\n    deleteNotification(notificationId); \r\n  }, [currentUser, notifications, taskLists, allUsers, addNotification, deleteNotification]); \r\n\r\n  const declineTaskListInvitation = useCallback((notificationId: string) => {\r\n     if (!currentUser) return;\r\n    const notification = notifications.find(n => n.id === notificationId);\r\n    if (!notification || notification.type !== 'task_list_invitation' || !notification.relatedItemId || !notification.triggerUserId) {\r\n        deleteNotification(notificationId); \r\n        return;\r\n    }\r\n\r\n    const list = taskLists.find(l => l.id === notification.relatedItemId);\r\n    const inviter = allUsers.find(u => u.id === notification.triggerUserId);\r\n\r\n    if (list && inviter) {\r\n        addNotification({\r\n            recipientId: inviter.id,\r\n            triggerUserId: currentUser.id,\r\n            type: 'invitation_response',\r\n            message: `${currentUser.name}, \"${list.name}\" listesine katılma davetinizi reddetti.`,\r\n            relatedItemId: list.id\r\n        });\r\n    }\r\n    deleteNotification(notificationId); \r\n  }, [currentUser, notifications, taskLists, addNotification, allUsers, deleteNotification]); \r\n\r\n\r\n  // Comment Management\r\n  const addComment = useCallback((taskId: string, text: string) => {\r\n    if (!currentUser) return;\r\n    const newComment: Comment = {\r\n      id: crypto.randomUUID(), taskId, userId: currentUser.id, text, createdAt: new Date(),\r\n    };\r\n    setTasks(prevTasks => prevTasks.map(task => \r\n      task.id === taskId ? { ...task, comments: [...(task.comments || []), newComment] } : task\r\n    ));\r\n  }, [currentUser]);\r\n\r\n  // Theme Management\r\n  const toggleTheme = useCallback(() => { setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light')); }, []);\r\n  \r\n  // Generate dynamic notifications (birthdays, upcoming tasks)\r\n  useEffect(() => {\r\n    if (!currentUser || !isMounted || isLoading) return;\r\n    const todayDate = new Date(); \r\n\r\n    // Birthday Reminders\r\n    currentUser.following.forEach(followedUserId => {\r\n      const followedUser = allUsers.find(u => u.id === followedUserId);\r\n      if (followedUser && followedUser.dateOfBirth) {\r\n        const birthDate = new Date(followedUser.dateOfBirth);\r\n        if (birthDate.getMonth() === todayDate.getMonth() && birthDate.getDate() === todayDate.getDate()) {\r\n          addNotification({\r\n            recipientId: currentUser.id,\r\n            triggerUserId: followedUser.id,\r\n            type: 'birthday_reminder',\r\n            message: `Bugün ${followedUser.name}'in doğum günü! Bir mesaj göndermeyi unutma.`,\r\n            linkTo: `/profile/${followedUser.id}`\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // Upcoming Task Reminders (within next 24 hours)\r\n    const tomorrow = addDays(todayDate, 1);\r\n    tasks.filter(task => \r\n      task.listId && taskLists.some(list => list.id === task.listId && (list.ownerId === currentUser.id || list.sharedWith.includes(currentUser.id))) && \r\n      !task.isCompleted && \r\n      isWithinInterval(new Date(task.dueDate), { start: startOfDay(todayDate), end: endOfDay(tomorrow) })\r\n    ).forEach(task => {\r\n      addNotification({\r\n        recipientId: currentUser.id,\r\n        type: 'upcoming_task',\r\n        message: `Yaklaşan görev: \"${task.title}\" ${format(new Date(task.dueDate), \"PPP\", {locale: tr})} tarihinde teslim edilecek.`,\r\n        relatedItemId: task.id,\r\n        linkTo: `/tasks?list=${task.listId}&task=${task.id}` \r\n      });\r\n    });\r\n\r\n  }, [currentUser, allUsers, tasks, taskLists, isMounted, addNotification, isLoading]);\r\n\r\n\r\n  if (!isMounted) { return null; }\r\n\r\n  return (\r\n    <AppContext.Provider value={{ \r\n      tasks, addTask, updateTask, deleteTask, toggleTaskCompletion,\r\n      currentUser, setCurrentUser, allUsers, registerUser, loginUser, logoutUser, verifyUser,\r\n      updateUserProfile, followUser, unfollowUser,\r\n      taskLists, addTaskList, updateTaskList, inviteUserToTaskList, deleteTaskList, updateTaskListVisibility,\r\n      acceptTaskListInvitation, declineTaskListInvitation,\r\n      addComment,\r\n      notifications, addNotification, markNotificationAsRead, markAllNotificationsAsRead, deleteNotification,\r\n      theme, toggleTheme,\r\n      isLoading \r\n    }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAppContext() {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nilay/OneDrive/Masa%C3%BCst%C3%BC/firebase-project/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\n// Inspired by react-hot-toast library\r\nimport * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"../components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 869, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nilay/OneDrive/Masa%C3%BCst%C3%BC/firebase-project/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 885, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nilay/OneDrive/Masa%C3%BCst%C3%BC/firebase-project/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ToastProvider = ToastPrimitives.Provider\r\n\r\nconst ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\r\n\r\nconst toastVariants = cva(\r\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border bg-background text-foreground\",\r\n        destructive:\r\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  return (\r\n    <ToastPrimitives.Root\r\n      ref={ref}\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nToast.displayName = ToastPrimitives.Root.displayName\r\n\r\nconst ToastAction = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Action>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Action\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastAction.displayName = ToastPrimitives.Action.displayName\r\n\r\nconst ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <X className=\"h-4 w-4\" />\r\n  </ToastPrimitives.Close>\r\n))\r\nToastClose.displayName = ToastPrimitives.Close.displayName\r\n\r\nconst ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn(\"text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastTitle.displayName = ToastPrimitives.Title.displayName\r\n\r\nconst ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm opacity-90\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastDescription.displayName = ToastPrimitives.Description.displayName\r\n\r\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\r\n\r\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\r\n\r\nexport {\r\n  type ToastProps,\r\n  type ToastActionElement,\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  ToastAction,\r\n}"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,iKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,iKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 998, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nilay/OneDrive/Masa%C3%BCst%C3%BC/firebase-project/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useToast } from \"../../hooks/use-toast\"\r\nimport {\r\n  Toast,\r\n  ToastClose,\r\n  ToastDescription,\r\n  ToastProvider,\r\n  ToastTitle,\r\n  ToastViewport,\r\n} from \"./toast\"\r\n\r\nexport function Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,8OAAC,iIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,8OAAC,iIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,8OAAC;4BAAI,WAAU;;gCACZ,uBAAS,8OAAC,iIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,8OAAC,iIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,8OAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB","debugId":null}}]
}